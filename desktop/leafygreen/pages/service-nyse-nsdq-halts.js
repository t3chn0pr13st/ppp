import ppp from '../../../ppp.js';
import { ServiceNyseNsdqHaltsPage } from '../../../shared/pages/service-nyse-nsdq-halts.js';
import { html } from '../../../shared/template.js';
import { ref } from '../../../shared/element/templating/ref.js';
import { when } from '../../../shared/element/templating/when.js';
import { css } from '../../../shared/element/styles/css.js';
import { repeat } from '../../../shared/element/templating/repeat.js';
import { pageStyles, loadingIndicator } from '../page.js';
import { stateAppearance } from './services.js';
import { formatDate } from '../../../shared/intl.js';
import { settings } from '../icons/settings.js';
import { caretDown } from '../icons/caret-down.js';

await ppp.i18n(import.meta.url);

const exampleSymbolsCode = `/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Ç–∏–∫–µ—Ä–æ–≤ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è.
 *
 */
const instruments =
  JSON.parse(
    plv8.execute(
      \`select content from http_get('https://api.tinkoff.ru/trading/stocks/list?sortType=ByName&orderType=Asc&country=All')\`
    )[0].content
  ).payload.values || [];

const symbols = [];

for (const i of instruments) {
  if (i.symbol.currency === 'USD' && i.symbol.ticker !== 'TCS')
    symbols.push(i.symbol.ticker.replace('.', ' '));
}

// SPB@US
symbols.push('SPB');

return symbols;`;

const exampleFormatterCode = `/**
 * –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ç–æ—Ä–≥–æ–≤–æ–π –ø–∞—É–∑–µ.
 *
 * @param {string} halt_date - –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ —Ç–æ—Ä–≥–æ–≤–æ–π –ø–∞—É–∑—ã (MM/DD/YYYY).
 * @param {string} halt_time - –í—Ä–µ–º—è —Ç–æ—Ä–≥–æ–≤–æ–π –ø–∞—É–∑—ã (Eastern Time).
 * @param {string} symbol - –¢–∏–∫–µ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.
 * @param {string} name - –ù–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.
 * @param {string} market - –ü–ª–æ—â–∞–¥–∫–∞ –ª–∏—Å—Ç–∏–Ω–≥–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.
 * @param {string} reason_code - –ö–æ–¥ —Ç–æ—Ä–≥–æ–≤–æ–π –ø–∞—É–∑—ã.
 * @param {string} pause_threshold_price - –ò–Ω–¥–∏–∫–∞—Ç–∏–≤–Ω–∞—è –ø–æ—Ä–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞ —Ç–æ—Ä–≥–æ–≤–æ–π –ø–∞—É–∑—ã.
 * @param {string} resumption_date - –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–æ—Ä–≥–æ–≤–æ–π –ø–∞—É–∑—ã (MM/DD/YYYY).
 * @param {string} resumption_quote_time - –í—Ä–µ–º—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–Ω–∏–≥–∏ –∑–∞—è–≤–æ–∫ (Eastern Time).
 * @param {string} resumption_trade_time - –í—Ä–µ–º—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ç–æ—Ä–≥–æ–≤ (Eastern Time).
 */
const mappings = {
  T1: 'Halt - News Pending. –û–∂–∏–¥–∞—é—Ç—Å—è –Ω–æ–≤–æ—Å—Ç–∏.',
  T2: 'Halt - News Released. –≠–º–∏—Ç–µ–Ω—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –æ –¥–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω–æ–º —Ä–∞—Å–∫—Ä—ã—Ç–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (SEC Regulation FD).',
  T5: 'Single Stock Trading Pause in Effect. –¶–µ–Ω–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –±–æ–ª–µ–µ, —á–µ–º –Ω–∞ 10% (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ) –≤ —Ç–µ—á–µ–Ω–∏–µ 5 –º–∏–Ω—É—Ç.',
  T6: 'Halt - Extraordinary Market Activity. –ù–µ–æ–±—ã—á–Ω–∞—è —Ä—ã–Ω–æ—á–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å. –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, –µ—Å–ª–∏ NASDAQ –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã (–∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—é —Ü–µ–Ω—ã) —Å –∫–æ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º, —Å —Ä–µ–ø–æ—Ä—Ç–∏–Ω–≥–æ–º –≤ –ª–µ–Ω—Ç—É —Å–¥–µ–ª–æ–∫, –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.',
  T8: 'Halt - Exchange-Traded-Fund (ETF). –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤ ETF, –µ—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ –±–∞–∑–æ–≤—ã—Ö –∞–∫—Ç–∏–≤–∞—Ö.',
  T12: 'Halt - Additional Information Requested by NASDAQ. –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, –µ—Å–ª–∏ NASDAQ –æ–∂–∏–¥–∞–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (—ç–º–∏—Ç–µ–Ω—Ç—É –Ω–∞–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ —Ç–æ—Ç –¥–æ–ª–∂–µ–Ω –¥–∞—Ç—å –æ—Ç–≤–µ—Ç).',
  H4: 'Halt - Non-compliance. –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –ª–∏—Å—Ç–∏–Ω–≥–∞ NASDAQ.',
  H9: 'Halt - Not Current. –ö–æ–º–ø–∞–Ω–∏—è –Ω–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–ª–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç –≤ —Ä–µ–≥—É–ª–∏—Ä—É—é—â–∏–µ –æ—Ä–≥–∞–Ω—ã (SEC).',
  H10: 'Halt - SEC Trading Suspension. SEC –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∞ —Ç–æ—Ä–≥–∏ –Ω–∞ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è.',
  H11: 'Halt - Regulatory Concern. –¢–æ—Ä–≥–∏ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ –¥—Ä—É–≥–æ–º —Ä—ã–Ω–æ—á–Ω–æ–º —Ü–µ–Ω—Ç—Ä–µ –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é —Ä–µ–≥—É–ª–∏—Ä—É—é—â–∏—Ö –æ—Ä–≥–∞–Ω–æ–≤. –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–∂–µ—Ç –∏—Å—á–∏—Å–ª—è—Ç—å—Å—è –¥–Ω—è–º–∏ –∏–ª–∏ –Ω–µ–¥–µ–ª—è–º–∏.',
  O1: 'Operations Halt, Contact Market Operations. –ü—Ä–æ–±–ª–µ–º—ã —Å –º–∞—Ä–∫–µ—Ç-–º–µ–π–∫–∏–Ω–≥–æ–º (–ø—Ä–æ–±–ª–µ–º—ã —Å –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º –∫–æ—Ç–∏—Ä–æ–≤–æ–∫ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∑–∞—è–≤–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ç–æ—Ä–≥–æ–≤).',
  IPO1: 'HIPO Issue not yet Trading. –ü—Ä–æ–±–ª–µ–º—ã –Ω–∞ —Ç–æ—Ä–≥–∞—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤, –≤—ã—Ö–æ–¥—è—â–∏—Ö –Ω–∞ IPO (–≤ –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å —Ç–æ—Ä–≥–æ–≤). –¢–æ—Ä–≥–∏ IPO –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è –ø–æ–∑–∂–µ –Ω–∞—á–∞–ª–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤.',
  M1: 'Corporate Action. –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ.',
  M2: ' Quotation Not Available. –ù–µ—Ç –∫–æ—Ç–∏—Ä–æ–≤–æ–∫ –ø–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—É.',
  LUDP: 'Volatility Trading Pause. –¢–æ—Ä–≥–æ–≤–∞—è –ø–∞—É–∑–∞ –≤ —Å–≤—è–∑–∏ —Å –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å—é.',
  LUDS: 'Volatility Trading Pause - Straddle Condition. –ü–∞—É–∑–∞, —Å–≤—è–∑–∞–Ω–Ω–∞—è —Å –≤—ã—Ö–æ–¥–æ–º –∫–æ—Ç–∏—Ä–æ–≤–∫–∏ bid –∏–ª–∏ ask –∑–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–µ–ª—ã.',
  MWC1: 'Market Wide Circuit Breaker Halt. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ—Ä–≥–æ–≤ –∏–∑-–∑–∞ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Å—Ç–æ–ø-–∑–∞—â–∏—Ç—ã —Ä—ã–Ω–∫–∞.',
  MWC2: 'Market Wide Circuit Breaker Halt. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ—Ä–≥–æ–≤ –∏–∑-–∑–∞ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Å—Ç–æ–ø-–∑–∞—â–∏—Ç—ã —Ä—ã–Ω–∫–∞.',
  MWC3: 'Market Wide Circuit Breaker Halt. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ—Ä–≥–æ–≤ –∏–∑-–∑–∞ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Å—Ç–æ–ø-–∑–∞—â–∏—Ç—ã —Ä—ã–Ω–∫–∞.',
  MWC0: 'Market Wide Circuit Breaker Halt. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ—Ä–≥–æ–≤ –∏–∑-–∑–∞ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Å—Ç–æ–ø-–∑–∞—â–∏—Ç—ã —Ä—ã–Ω–∫–∞.',
  T3: 'News and Resumption Times. –≠–º–∏—Ç–µ–Ω—Ç –∑–∞–∫–æ–Ω—á–∏–ª –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π, –≤—Å–∫–æ—Ä–µ –æ–∂–∏–¥–∞—é—Ç—Å—è —Ç–æ—Ä–≥–∏.',
  T7: 'Single Stock Trading Pause/Quotation-Only Period. –°–º. –∫–æ–¥ T5.',
  R4: 'Qualifications Issues Reviewed/Resolved; Quotations/Trading to Resume. –°–º. –∫–æ–¥ H4.',
  R9: 'Filing Requirements Satisfied/Resolved; Quotations/Trading To Resume. –°–º. –∫–æ–¥ H9.',
  C3: 'Issuer News Not Forthcoming; Quotations/Trading To Resume. –ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π –æ—Ç–º–µ–Ω–µ–Ω–∞. –°–º. –∫–æ–¥—ã T2 –∏ T3.',
  C4: 'Qualifications Halt Ended; Maintenance Requirements Met. –°–º. –∫–æ–¥—ã H4 –∏ R4.',
  C9: 'Qualifications Halt Concluded; Filings Met; Quotes/Trades To Resume. –°–º. –∫–æ–¥—ã H9 –∏ R9.',
  C11: 'Trade Halt Concluded By Other Regulatory Auth.; Quotes/Trades Resume. –°–º. –∫–æ–¥ H11.',
  R1: 'New Issue Available. –°–º. –∫–æ–¥ T1.',
  R2: 'Issue Available. –°–º. –∫–æ–¥ T2.',
  IPOQ: 'IPO security released for quotation. –î–ª—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –≤ –¥–µ–Ω—å IPO - –Ω–∞—á–∞–ª–æ –∫–æ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. –¢–æ–ª—å–∫–æ NASDAQ.',
  IPOE: 'IPO security - positioning window extension. –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∞ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫ –≤ –ø–µ—Ä–µ–∫—Ä—ë—Å—Ç–Ω–æ–π —Å–µ—Å—Å–∏–∏ NASDAQ –¥–ª—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –≤ –¥–µ–Ω—å IPO.',
  MWCQ: 'Market Wide Circuit Breaker Resumption. –°–Ω—è—Ç–∏–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Å—Ç–æ–ø-–∑–∞—â–∏—Ç—ã —Ä—ã–Ω–∫–∞.',
  M: 'Volatility Trading Pause. –¢–æ—Ä–≥–æ–≤–∞—è –ø–∞—É–∑–∞ –≤ —Å–≤—è–∑–∏ —Å –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å—é.',
  D: 'Security deletion from NASDAQ / CQS. –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç —É–¥–∞–ª—ë–Ω —Å —Ç–æ—Ä–≥–æ–≤ (–¥–µ–ª–∏—Å—Ç–∏–Ω–≥).'
};
const formatDateTime = (dateString) => {
  const currentDate = new Date();
  const currentYear = currentDate.getFullYear();
  const firstOfMarch = new Date(currentYear, 2, 1);
  const daysUntilFirstSundayInMarch = (7 - firstOfMarch.getDay()) % 7;
  const secondSundayInMarch = firstOfMarch.getDate() + daysUntilFirstSundayInMarch + 7;
  const start = new Date(currentYear, 2, secondSundayInMarch);
  const firstOfNovember = new Date(currentYear, 10, 1);
  const daysUntilFirstSundayInNov = (7 - firstOfNovember.getDay()) % 7;
  const firstSundayInNovember = firstOfNovember.getDate() + daysUntilFirstSundayInNov;
  const end = new Date(currentYear, 10, firstSundayInNovember);
  const isDST = currentDate.getTime() <= end.getTime() && currentDate.getTime() >= start.getTime();
  const [date, timeZ] = new Date(\`\${dateString} GMT-\${isDST ? '7' : '8'}\`)
    .toISOString()
    .split(/T/);
  const [y, m, d] = date.split(/-/);
  const [time] = timeZ.split(/\\./);

  return \`\${d}.\${m}.\${y} \${time} MSK\`;
};

let message = \`‚ÄºÔ∏è‚è∏ –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ—Ä–≥–æ–≤ (\${market})
\${'\$'}\${symbol}
<b>\${name}</b>
üïí \${formatDateTime(\`\${halt_date} \${halt_time}\`)}

\`;

const description = mappings[reason_code];

if (description) message += \`<b>–ö–æ–¥ \${reason_code}</b>: \${description}\\n\`;
else message += \`<b>–û–∂–∏–¥–∞–Ω–∏–µ –∫–æ–¥–∞</b>\\n\`;

if (resumption_quote_time)
  message += \`\\n–û—Ç–∫—Ä—ã—Ç–∏–µ –∫–Ω–∏–≥–∏ –∑–∞—è–≤–æ–∫: \${formatDateTime(
    \`\${resumption_date} \${resumption_quote_time}\`
  )}\`;

if (resumption_trade_time)
  message += \`\\n–í–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤: \${formatDateTime(
    \`\${resumption_date} \${resumption_trade_time}\`
  )}\`;

message +=
  '\\n\\n<a href="https://www.nasdaqtrader.com/trader.aspx?id=TradeHalts">–ö —Å–ø–∏—Å–∫—É —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—É–∑</a>';

return message;`;

export const serviceNyseNsdqHaltsPageTemplate = (context, definition) => html`
  <template>
    <${'ppp-page-header'} ${ref('header')}>
      –°–µ—Ä–≤–∏—Å—ã - —Ç–æ—Ä–≥–æ–≤—ã–µ –ø–∞—É–∑—ã NYSE/NASDAQ
    </ppp-page-header>
    <form ${ref('form')} novalidate onsubmit="return false">
      <div class="loading-wrapper" ?busy="${(x) => x.busy}">
        ${when(
          (x) => x.service,
          html`
            <div class="section-content horizontal-overflow">
              <div class="service-details">
                <div class="service-details-controls">
                  <div class="service-details-control service-details-label">
                    ${(x) => x.service.name}
                  </div>
                  <div
                    class="service-details-control"
                    style="justify-content: left"
                  >
                    <${'ppp-button'}
                      ?disabled="${(x) =>
                        x.busy ||
                        x.service?.removed ||
                        x.service?.state === 'failed'}"
                      @click="${(x) => x.restart()}">–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å
                    </ppp-button>
                    <ppp-button
                      ?disabled="${(x) =>
                        x.busy ||
                        x.service?.removed ||
                        x.service?.state === 'stopped' ||
                        x.service?.state === 'failed'}"
                      @click="${(x) => x.stop()}">–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
                    </ppp-button>
                    <ppp-button
                      ?disabled="${(x) => x.busy || x.service?.removed}"
                      appearance="danger"
                      @click="${(x) => x.remove()}">–£–¥–∞–ª–∏—Ç—å
                    </ppp-button>
                  </div>
                  <div class="service-details-control">
                    <${'ppp-badge'}
                      appearance="${(x) => stateAppearance(x.service.state)}">
                      ${(x) => x.t(`$const.serviceState.${x.service.state}`)}
                    </ppp-badge>
                    <ppp-badge
                      appearance="blue">
                      –ü–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è
                    </ppp-badge>
                  </div>
                </div>
                <div class="service-details-info">
                  <div class="service-details-info-container">
                    <span style="grid-column-start: 1;grid-row-start: 1;">
                      –í–µ—Ä—Å–∏—è
                    </span>
                    <div style="grid-column-start: 1;grid-row-start: 2;">
                      ${(x) => x.service.version}
                    </div>
                    <span style="grid-column-start: 2;grid-row-start: 1;">
                    –¢–∏–ø
                    </span>
                    <div style="grid-column-start: 2;grid-row-start: 2;">
                      ${(x) => x.t(`$const.service.${x.service.type}`)}
                    </div>
                    <span style="grid-column-start: 3;grid-row-start: 1;">
                    –°–æ–∑–¥–∞–Ω
                    </span>
                    <div style="grid-column-start: 3;grid-row-start: 2;">
                      ${(x) => formatDate(x.service.createdAt)}
                    </div>
                    <span style="grid-column-start: 4;grid-row-start: 1;">
                    –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ
                    </span>
                    <div style="grid-column-start: 4;grid-row-start: 2;">
                      ${(x) =>
                        formatDate(x.service.updatedAt ?? x.service.createdAt)}
                    </div>
                    <span style="grid-column-start: 5;grid-row-start: 1;">
                    –£–¥–∞–ª—ë–Ω
                    </span>
                    <div style="grid-column-start: 5;grid-row-start: 2;">
                      ${(x) => (x.service.removed ? '–î–∞' : '–ù–µ—Ç')}
                    </div>
                  </div>
                </div>
              </div>
            </div>`
        )}
        <section>
          <div class="label-group">
            <h5>–ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞</h5>
            <p>–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∏–º—è, —á—Ç–æ–±—ã —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ —ç—Ç–æ—Ç –ø—Ä–æ—Ñ–∏–ª—å, –∫–æ–≥–¥–∞
              –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è.</p>
          </div>
          <div class="input-group">
            <ppp-text-field
              placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ"
              value="${(x) => x.service?.name}"
              ${ref('serviceName')}
            ></ppp-text-field>
          </div>
        </section>
        <section>
          <div class="label-group">
            <h5>–ü—Ä–æ—Ñ–∏–ª—å API Supabase</h5>
          </div>
          <div class="input-group">
            <${'ppp-select'}
              ?disabled="${(x) => !x.apis}"
              value="${(x) => x.service?.apiId}"
              placeholder="–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π"
              ${ref('api')}
            >
              ${repeat(
                (x) => x?.apis,
                html`
                  <ppp-option
                    ?removed="${(x) => x.removed}"
                    value="${(x) => x._id}"
                  >
                    ${(x) => x.name}
                  </ppp-option>
                `
              )}
              ${when(
                (x) => x.apis !== null,
                caretDown({
                  slot: 'indicator'
                })
              )}
              ${when(
                (x) => x.apis === null,
                settings({
                  slot: 'indicator',
                  cls: 'spinner-icon'
                })
              )}
            </ppp-select>
            <${'ppp-button'}
              class="margin-top"
              @click="${(x) =>
                x.app.navigate({
                  page: 'api-supabase'
                })}"
              appearance="primary"
            >
              –ü–æ–¥–∫–ª—é—á–∏—Ç—å API
            </ppp-button>
          </div>
        </section>
        <section>
          <div class="label-group">
            <h5>–ü—Ä–æ—Ñ–∏–ª—å —Å–µ—Ä–≤–µ—Ä–∞</h5>
          </div>
          <div class="input-group">
            <ppp-select
              ?disabled="${(x) => !x.servers}"
              placeholder="–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π"
              value="${(x) => x.service?.serverId}"
              ${ref('server')}
            >
              ${repeat(
                (x) => x?.servers,
                html`
                  <ppp-option
                    ?removed="${(x) => x.removed}"
                    value="${(x) => x._id}"
                  >
                    ${(x) => x.name}
                  </ppp-option>
                `
              )}
              ${when(
                (x) => x.servers !== null,
                caretDown({
                  slot: 'indicator'
                })
              )}
              ${when(
                (x) => x.servers === null,
                settings({
                  slot: 'indicator',
                  cls: 'spinner-icon'
                })
              )}
            </ppp-select>
            <ppp-button
              class="margin-top"
              @click="${(x) =>
                x.app.navigate({
                  page: 'server-selector'
                })}"
              appearance="primary"
            >
              –î–æ–±–∞–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä
            </ppp-button>
          </div>
        </section>
        <section>
          <div class="label-group">
            <h5>–ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–ø—Ä–æ—Å–∞</h5>
            <p>–ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—É–∑–∞—Ö –æ—Ç
              –±–∏—Ä–∂–∏. –ó–∞–¥–∞—ë—Ç—Å—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö.</p>
          </div>
          <div class="input-group">
            <ppp-text-field
              type="number"
              placeholder="5"
              value="${(x) => x.service?.interval ?? '5'}"
              ${ref('interval')}
            ></ppp-text-field>
          </div>
        </section>
        <section>
          <div class="label-group">
            <h5>–ë–æ—Ç</h5>
            <p>–ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –æ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—É–∑–∞—Ö.
              –î–æ–ª–∂–µ–Ω –æ–±–ª–∞–¥–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –ø—Ä–∞–≤–∞–º–∏ –≤ –∫–∞–Ω–∞–ª–µ/–≥—Ä—É–ø–ø–µ.</p>
          </div>
          <div class="input-group">
            <ppp-select
              ?disabled="${(x) => !x.bots}"
              placeholder="–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π"
              value="${(x) => x.service?.botId}"
              ${ref('bot')}
            >
              ${repeat(
                (x) => x?.bots,
                html`
                  <ppp-option
                    ?removed="${(x) => x.removed}"
                    value="${(x) => x._id}"
                  >
                    ${(x) => x.name}
                  </ppp-option>
                `
              )}
              ${when(
                (x) => x.bots !== null,
                caretDown({
                  slot: 'indicator'
                })
              )}
              ${when(
                (x) => x.bots === null,
                settings({
                  slot: 'indicator',
                  cls: 'spinner-icon'
                })
              )}
            </ppp-select>
            <ppp-button
              class="margin-top"
              @click="${(x) =>
                x.app.navigate({
                  page: 'telegram-bot'
                })}"
              appearance="primary"
            >
              –î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞
            </ppp-button>
          </div>
        </section>
        <section>
          <div class="label-group">
            <h5>–¢–∏–∫–µ—Ä—ã –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è</h5>
            <p>–§—É–Ω–∫—Ü–∏—è –Ω–∞ —è–∑—ã–∫–µ PLV8, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è –º–∞—Å—Å–∏–≤ —Ç–∏–∫–µ—Ä–æ–≤ –¥–ª—è
              –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è. –¢–∏–∫–µ—Ä—ã –≤–Ω–µ –º–∞—Å—Å–∏–≤–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å—Å—è –Ω–µ –±—É–¥—É—Ç. –ü–æ
              —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞—Ç–∞–ª–æ–≥ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¢–∏–Ω—å–∫–æ—Ñ—Ñ
              –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–π.</p>
          </div>
          <div class="input-group">
            <${'ppp-codeflask'}
              :code="${(x) => x.service?.symbolsCode ?? exampleSymbolsCode}"
              ${ref('symbolsCode')}
            ></ppp-codeflask>
            <${'ppp-button'}
              class="margin-top"
              @click="${(x) => x.symbolsCode.updateCode(exampleSymbolsCode)}"
              appearance="primary"
            >
              –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            </ppp-button>
            <ppp-button
              class="margin-top"
              ?disabled="${(x) => x.busy}"
              @click="${(x) => x.callSymbolsFunction()}"
              appearance="primary"
            >
              –í—ã–ø–æ–ª–Ω–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é
            </ppp-button>
          </div>
        </section>
        <section>
          <div class="label-group">
            <h5>–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</h5>
            <p>–õ–æ–≥–∏–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —è–∑—ã–∫–µ PLV8.</p>
          </div>
          <div class="input-group">
            <${'ppp-codeflask'}
              :code="${(x) => x.service?.formatterCode ?? exampleFormatterCode}"
              ${ref('formatterCode')}
            ></ppp-codeflask>
            <ppp-button
              class="margin-top"
              @click="${(x) =>
                x.formatterCode.updateCode(exampleFormatterCode)}"
              appearance="primary"
            >
              –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            </ppp-button>
          </div>
        </section>
        <section>
          <div class="label-group">
            <h5>–ö–∞–Ω–∞–ª –∏–ª–∏ –≥—Ä—É–ø–ø–∞</h5>
            <p>–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ –≥—Ä—É–ø–ø—ã, –∫—É–¥–∞ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è
              —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—É–∑–∞—Ö.</p>
          </div>
          <div class="input-group">
            <ppp-text-field
              type="number"
              placeholder="–ö–∞–Ω–∞–ª –∏–ª–∏ –≥—Ä—É–ø–ø–∞"
              value="${(x) => x.service?.channel}"
              ${ref('channel')}
            ></ppp-text-field>
            <ppp-button
              class="margin-top"
              ?disabled="${(x) => x.busy}"
              @click="${(x) => x.sendTestNyseNsdqHaltMessage()}"
              appearance="primary"
            >
              –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            </ppp-button>
          </div>
        </section>
        <${'ppp-modal'} ${ref('terminalModal')}>
          <span slot="title">–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–∏—Å–∞</span>
          <div slot="body">
            <div class="description">
              <${'ppp-terminal'} ${ref('terminalDom')}></ppp-terminal>
            </div>
          </div>
        </ppp-modal>
        ${when((x) => x.busy, html`${loadingIndicator()}`)}
      </div>
      <section class="last">
        <div class="footer-actions">
          <${'ppp-button'}
            ?disabled="${(x) => x.busy || x.service?.removed}"
            type="submit"
            @click="${(x) => x.install()}"
            appearance="primary"
          >
            ${(x) =>
              x.service ? '–ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å' : '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å'}
          </ppp-button>
        </div>
      </section>
    </form>
    </div>
  </template>
`;

export const serviceNyseNsdqHaltsPageStyles = (context, definition) =>
  css`
    ${pageStyles}
    section ppp-codeflask {
      width: 100%;
      height: 256px;
    }

    ppp-modal .description {
      padding: 10px 16px 10px 20px;
      border-radius: 7px;
      background-color: rgb(33, 49, 60);
      border: 1px solid rgb(231, 238, 236);
    }
  `;

// noinspection JSUnusedGlobalSymbols
export const serviceNyseNsdqHaltsPage = ServiceNyseNsdqHaltsPage.compose({
  baseName: 'service-nyse-nsdq-halts-page',
  template: serviceNyseNsdqHaltsPageTemplate,
  styles: serviceNyseNsdqHaltsPageStyles
});
