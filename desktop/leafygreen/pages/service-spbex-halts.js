import ppp from '../../../ppp.js';
import { ServiceSpbexHaltsPage } from '../../../shared/pages/service-spbex-halts.js';
import { html } from '../../../shared/template.js';
import { ref } from '../../../shared/element/templating/ref.js';
import { when } from '../../../shared/element/templating/when.js';
import { css } from '../../../shared/element/styles/css.js';
import { repeat } from '../../../shared/element/templating/repeat.js';
import { pageStyles, loadingIndicator } from '../page.js';
import { stateAppearance } from './services.js';
import { formatDate } from '../../../shared/intl.js';
import { settings } from '../icons/settings.js';
import { caretDown } from '../icons/caret-down.js';

await ppp.i18n(import.meta.url);

const exampleInstrumentsCode = `/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.
 *
 * @returns {Object[]} instruments - –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.
 * @returns {string} instruments[].isin - ISIN –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.
 * @returns {string} instruments[].ticker - –¢–∏–∫–µ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.
 * @returns {string} instruments[].name - –ù–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.
 * @returns {string} instruments[].currency - –í–∞–ª—é—Ç–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.
 */
const instruments =
  JSON.parse(
    plv8.execute(
      \`select content from http_get('https://api.tinkoff.ru/trading/stocks/list?sortType=ByName&orderType=Asc&country=All')\`
    )[0].content
  ).payload.values || [];

return instruments.map((i) => {
  return {
    isin: i.symbol.isin,
    ticker: i.symbol.ticker,
    name: i.symbol.showName.replace("'", "''"),
    currency: i.symbol.currency
  };
});`;

const exampleFormatterCode = `/**
 * –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ç–æ—Ä–≥–æ–≤–æ–π –ø–∞—É–∑–µ.
 *
 * @param {string} isin - ISIN –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.
 * @param {string} ticker - –¢–∏–∫–µ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.
 * @param {string} name - –ù–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.
 * @param {string} currency - –í–∞–ª—é—Ç–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.
 * @param {string} date - –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–∏—Ä–∂–∏.
 * @param {string} url - –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Å–∞–π—Ç–µ –±–∏—Ä–∂–∏.
 * @param {string} start - –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ç–æ—Ä–≥–æ–≤–æ–π –ø–∞—É–∑—ã, MSK.
 * @param {string} finish - –í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–æ—Ä–≥–æ–≤–æ–π –ø–∞—É–∑—ã, MSK.
 */
return \`‚ÄºÔ∏è‚è∏ –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ—Ä–≥–æ–≤ (SPBEX)
\${'$'}\${ticker || isin}
<b>\${name}, \${isin}</b>
üïí \${start} - \${finish}

<a href="\${encodeURIComponent(url)}">–°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–µ —Ç–æ—Ä–≥–æ–≤</a>
\`;`;

export const serviceSpbexHaltsPageTemplate = (context, definition) => html`
  <template>
    <${'ppp-page-header'} ${ref('header')}>
      –°–µ—Ä–≤–∏—Å—ã - —Ç–æ—Ä–≥–æ–≤—ã–µ –ø–∞—É–∑—ã SPBEX
    </ppp-page-header>
    <form ${ref('form')} novalidate onsubmit="return false">
      <div class="loading-wrapper" ?busy="${(x) => x.busy}">
        ${when(
          (x) => x.service,
          html`
            <div class="section-content horizontal-overflow">
              <div class="service-details">
                <div class="service-details-controls">
                  <div class="service-details-control service-details-label">
                    ${(x) => x.service.name}
                  </div>
                  <div
                    class="service-details-control"
                    style="justify-content: left"
                  >
                    <${'ppp-button'}
                      ?disabled="${(x) =>
                        x.busy ||
                        x.service?.removed ||
                        x.service?.state === 'failed'}"
                      @click="${(x) => x.restart()}">–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å
                    </ppp-button>
                    <ppp-button
                      ?disabled="${(x) =>
                        x.busy ||
                        x.service?.removed ||
                        x.service?.state === 'stopped' ||
                        x.service?.state === 'failed'}"
                      @click="${(x) => x.stop()}">–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
                    </ppp-button>
                    <ppp-button
                      ?disabled="${(x) => x.busy || x.service?.removed}"
                      appearance="danger"
                      @click="${(x) => x.remove()}">–£–¥–∞–ª–∏—Ç—å
                    </ppp-button>
                  </div>
                  <div class="service-details-control">
                    <${'ppp-badge'}
                      appearance="${(x) => stateAppearance(x.service.state)}">
                      ${(x) => x.t(`$const.serviceState.${x.service.state}`)}
                    </ppp-badge>
                    <ppp-badge
                      appearance="blue">
                      –ü–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è
                    </ppp-badge>
                  </div>
                </div>
                <div class="service-details-info">
                  <div class="service-details-info-container">
                    <span style="grid-column-start: 1;grid-row-start: 1;">
                      –í–µ—Ä—Å–∏—è
                    </span>
                    <div style="grid-column-start: 1;grid-row-start: 2;">
                      ${(x) => x.service.version}
                    </div>
                    <span style="grid-column-start: 2;grid-row-start: 1;">
                    –¢–∏–ø
                    </span>
                    <div style="grid-column-start: 2;grid-row-start: 2;">
                      ${(x) => x.t(`$const.service.${x.service.type}`)}
                    </div>
                    <span style="grid-column-start: 3;grid-row-start: 1;">
                    –°–æ–∑–¥–∞–Ω
                    </span>
                    <div style="grid-column-start: 3;grid-row-start: 2;">
                      ${(x) => formatDate(x.service.createdAt)}
                    </div>
                    <span style="grid-column-start: 4;grid-row-start: 1;">
                    –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ
                    </span>
                    <div style="grid-column-start: 4;grid-row-start: 2;">
                      ${(x) =>
                        formatDate(x.service.updatedAt ?? x.service.createdAt)}
                    </div>
                    <span style="grid-column-start: 5;grid-row-start: 1;">
                    –£–¥–∞–ª—ë–Ω
                    </span>
                    <div style="grid-column-start: 5;grid-row-start: 2;">
                      ${(x) => (x.service.removed ? '–î–∞' : '–ù–µ—Ç')}
                    </div>
                  </div>
                </div>
              </div>
            </div>`
        )}
        <section>
          <div class="label-group">
            <h5>–ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞</h5>
            <p>–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∏–º—è, —á—Ç–æ–±—ã —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ —ç—Ç–æ—Ç –ø—Ä–æ—Ñ–∏–ª—å, –∫–æ–≥–¥–∞
              –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è.</p>
          </div>
          <div class="input-group">
            <ppp-text-field
              placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ"
              value="${(x) => x.service?.name}"
              ${ref('serviceName')}
            ></ppp-text-field>
          </div>
        </section>
        <section>
          <div class="label-group">
            <h5>–ü—Ä–æ—Ñ–∏–ª—å API Supabase</h5>
          </div>
          <div class="input-group">
            <${'ppp-select'}
              ?disabled="${(x) => !x.apis}"
              value="${(x) => x.service?.apiId}"
              placeholder="–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π"
              ${ref('api')}
            >
              ${repeat(
                (x) => x?.apis,
                html`
                  <ppp-option
                    ?removed="${(x) => x.removed}"
                    value="${(x) => x._id}"
                  >
                    ${(x) => x.name}
                  </ppp-option>
                `
              )}
              ${when(
                (x) => x.apis !== null,
                caretDown({
                  slot: 'indicator'
                })
              )}
              ${when(
                (x) => x.apis === null,
                settings({
                  slot: 'indicator',
                  cls: 'spinner-icon'
                })
              )}
            </ppp-select>
            <${'ppp-button'}
              class="margin-top"
              @click="${(x) => x.app.navigate({
                page: 'api-supabase'
              })}"
              appearance="primary"
            >
              –ü–æ–¥–∫–ª—é—á–∏—Ç—å API
            </ppp-button>
          </div>
        </section>
        <section>
          <div class="label-group">
            <h5>–ü—Ä–æ—Ñ–∏–ª—å —Å–µ—Ä–≤–µ—Ä–∞</h5>
          </div>
          <div class="input-group">
            <ppp-select
              ?disabled="${(x) => !x.servers}"
              placeholder="–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π"
              value="${(x) => x.service?.serverId}"
              ${ref('server')}
            >
              ${repeat(
                (x) => x?.servers,
                html`
                  <ppp-option
                    ?removed="${(x) => x.removed}"
                    value="${(x) => x._id}"
                  >
                    ${(x) => x.name}
                  </ppp-option>
                `
              )}
              ${when(
                (x) => x.servers !== null,
                caretDown({
                  slot: 'indicator'
                })
              )}
              ${when(
                (x) => x.servers === null,
                settings({
                  slot: 'indicator',
                  cls: 'spinner-icon'
                })
              )}
            </ppp-select>
            <ppp-button
              class="margin-top"
              @click="${(x) =>
                x.app.navigate({
                  page: 'server-selector'
                })}"
              appearance="primary"
            >
              –î–æ–±–∞–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä
            </ppp-button>
          </div>
        </section>
        <section>
          <div class="label-group">
            <h5>–ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–ø—Ä–æ—Å–∞</h5>
            <p>–ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—É–∑–∞—Ö –æ—Ç
              –±–∏—Ä–∂–∏. –ó–∞–¥–∞—ë—Ç—Å—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö.</p>
          </div>
          <div class="input-group">
            <ppp-text-field
              type="number"
              placeholder="5"
              value="${(x) => x.service?.interval ?? '5'}"
              ${ref('interval')}
            ></ppp-text-field>
          </div>
        </section>
        <section>
          <div class="label-group">
            <h5>–ë–æ—Ç</h5>
            <p>–ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –æ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—É–∑–∞—Ö.
              –î–æ–ª–∂–µ–Ω –æ–±–ª–∞–¥–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –ø—Ä–∞–≤–∞–º–∏ –≤ –∫–∞–Ω–∞–ª–µ/–≥—Ä—É–ø–ø–µ.</p>
          </div>
          <div class="input-group">
            <ppp-select
              ?disabled="${(x) => !x.bots}"
              placeholder="–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π"
              value="${(x) => x.service?.botId}"
              ${ref('bot')}
            >
              ${repeat(
                (x) => x?.bots,
                html`
                  <ppp-option
                    ?removed="${(x) => x.removed}"
                    value="${(x) => x._id}"
                  >
                    ${(x) => x.name}
                  </ppp-option>
                `
              )}
              ${when(
                (x) => x.bots !== null,
                caretDown({
                  slot: 'indicator'
                })
              )}
              ${when(
                (x) => x.bots === null,
                settings({
                  slot: 'indicator',
                  cls: 'spinner-icon'
                })
              )}
            </ppp-select>
            <ppp-button
              class="margin-top"
              @click="${(x) =>
                x.app.navigate({
                  page: 'telegram-bot'
                })}"
              appearance="primary"
            >
              –î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞
            </ppp-button>
          </div>
        </section>
        <section>
          <div class="label-group">
            <h5>–°–ª–æ–≤–∞—Ä—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤</h5>
            <p>–§—É–Ω–∫—Ü–∏—è –Ω–∞ —è–∑—ã–∫–µ PLV8, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è —Å–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –±–∏—Ä–∂–∏ —Å
              –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ –∫–∞—á–µ—Å—Ç–≤–µ
              –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞—Ç–∞–ª–æ–≥ –¢–∏–Ω—å–∫–æ—Ñ—Ñ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–π.</p>
          </div>
          <div class="input-group">
            <${'ppp-codeflask'}
              :code="${(x) =>
                x.service?.instrumentsCode ?? exampleInstrumentsCode}"
              ${ref('instrumentsCode')}
            ></ppp-codeflask>
            <${'ppp-button'}
              class="margin-top"
              @click="${(x) =>
                x.instrumentsCode.updateCode(exampleInstrumentsCode)}"
              appearance="primary"
            >
              –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            </ppp-button>
            <ppp-button
              class="margin-top"
              ?disabled="${(x) => x.busy}"
              @click="${(x) => x.callInstrumentsFunction()}"
              appearance="primary"
            >
              –í—ã–ø–æ–ª–Ω–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é
            </ppp-button>
          </div>
        </section>
        <section>
          <div class="label-group">
            <h5>–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</h5>
            <p>–õ–æ–≥–∏–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —è–∑—ã–∫–µ PLV8.</p>
          </div>
          <div class="input-group">
            <${'ppp-codeflask'}
              :code="${(x) => x.service?.formatterCode ?? exampleFormatterCode}"
              ${ref('formatterCode')}
            ></ppp-codeflask>
            <ppp-button
              class="margin-top"
              @click="${(x) =>
                x.formatterCode.updateCode(exampleFormatterCode)}"
              appearance="primary"
            >
              –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            </ppp-button>
          </div>
        </section>
        <section>
          <div class="label-group">
            <h5>–ö–∞–Ω–∞–ª –∏–ª–∏ –≥—Ä—É–ø–ø–∞</h5>
            <p>–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ –≥—Ä—É–ø–ø—ã, –∫—É–¥–∞ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è
              —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—É–∑–∞—Ö.</p>
          </div>
          <div class="input-group">
            <ppp-text-field
              type="number"
              placeholder="–ö–∞–Ω–∞–ª –∏–ª–∏ –≥—Ä—É–ø–ø–∞"
              value="${(x) => x.service?.channel}"
              ${ref('channel')}
            ></ppp-text-field>
            <ppp-button
              class="margin-top"
              ?disabled="${(x) => x.busy}"
              @click="${(x) => x.sendTestSpbexHaltMessage()}"
              appearance="primary"
            >
              –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            </ppp-button>
          </div>
        </section>
        <${'ppp-modal'} ${ref('terminalModal')}>
          <span slot="title">–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–∏—Å–∞</span>
          <div slot="body">
            <div class="description">
              <${'ppp-terminal'} ${ref('terminalDom')}></ppp-terminal>
            </div>
          </div>
        </ppp-modal>
        ${when((x) => x.busy, html`${loadingIndicator()}`)}
      </div>
      <section class="last">
        <div class="footer-actions">
          <${'ppp-button'}
            ?disabled="${(x) => x.busy || x.service?.removed}"
            type="submit"
            @click="${(x) => x.install()}"
            appearance="primary"
          >
            ${(x) =>
              x.service ? '–ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å' : '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å'}
          </ppp-button>
        </div>
      </section>
    </form>
    </div>
  </template>
`;

export const serviceSpbexHaltsPageStyles = (context, definition) =>
  css`
    ${pageStyles}
    section ppp-codeflask {
      width: 100%;
      height: 256px;
    }

    ppp-modal .description {
      padding: 10px 16px 10px 20px;
      border-radius: 7px;
      background-color: rgb(33, 49, 60);
      border: 1px solid rgb(231, 238, 236);
    }
  `;

// noinspection JSUnusedGlobalSymbols
export const serviceSpbexHaltsPage = ServiceSpbexHaltsPage.compose({
  baseName: 'service-spbex-halts-page',
  template: serviceSpbexHaltsPageTemplate,
  styles: serviceSpbexHaltsPageStyles
});
